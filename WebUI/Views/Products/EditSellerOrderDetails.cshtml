@model Models.DTO.OrderDetails

@{
    ViewBag.Title = " Order Details";
}

<h2>Order Details</h2>

@using (Html.BeginForm("EditSellerOrderDetails", "Products", FormMethod.Post, new { @class = "register-form" }))
{
    @Html.AntiForgeryToken()

    <div class="updateSellerOrder-formBody">

        <div style="height:10px">

        </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="form-grp col-sm-4 col-sm-4">
                @Html.LabelFor(model => model.OrderID, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.OrderID, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
            </div>

            <div class="form-grp col-sm-4">
                @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>

            <div class="form-grp col-sm-4">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="row">
            <div class="form-grp col-sm-4">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>

            <div class="form-grp col-sm-4">
                @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>

            <div class="form-grp col-sm-4">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="row" style="align-items: center; display: flex; flex-direction: column;">
            <div class="form-grp col-sm-11">
                @Html.LabelFor(model => model.OrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <select name="OrderStatus" class="form-control">
                    @foreach (var item in ViewBag.lstOrdStatusList)
                    {
                        if (item.Text == Model.OrderStatus)
                        {
                            <option value="@item.Value" selected="selected">@item.Text </option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<style>
    .updateSellerOrder-formBody {
        width: 65%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border-radius: 25px;
        background-color: white;
        padding:8px;
    }
</style>
