@model Models.DTO.ProductDetails

@{
    ViewBag.Title = "AddProduct";
}

<h2>Add Product</h2>


@using (Html.BeginForm("AddProduct", "Products", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger", @id = "txtValidationSummary" })
    <div class="form-group">
        <label class="control-label col-md-2">Product Name</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.PName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Product Title</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.PTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Product Description</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.PDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Product Category</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CategoryID_FK, new SelectList(ViewBag.CategoryList, "Value", "Text"), "Please Select Category", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryID_FK, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Product Quantity</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Product Price</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Product Image</label>
        <div class="col-md-10">
            <input type="file" name="imgFile" class="btn btn-info" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-success" />
        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
